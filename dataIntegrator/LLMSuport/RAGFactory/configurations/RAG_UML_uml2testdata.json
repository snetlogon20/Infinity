{
	"UML_Diagram": "@startuml\n    entity Core_LC_Master_Data {\n        LC_ID : String,\n        Applicant_ID : String,\n        Beneficiary_ID : String,\n        Issuing_Bank_ID : String,\n        Advising_Bank_ID : String,\n        LC_Type : String,\n        LC_Currency : String,\n        LC_Amount : Decimal(15, 2),\n        Issue_Date : Date,\n        Expiry_Date : Date,\n        Latest_Shipment_Date : Date,\n        LC_Description : String\n    }\n    entity Documentary_Compliance {\n        Document_ID : String,\n        LC_ID_Ref : String,\n        Document_Type : String,\n        Document_Status : String,\n        Submission_Date : Date,\n        Review_Date : Date,\n        Discrepancy_Details : String,\n        Document_Reference_Number : String\n    }\n    entity Transaction_Tracking {\n        Transaction_ID : String,\n        LC_ID_Ref : String,\n        Transaction_Date : Date,\n        Transaction_Type : String,\n        Party_Involved : String,\n        Transaction_Status : String,\n        Previous_Transaction_ID : String\n    }\n    Core_LC_Master_Data ||--o{ Documentary_Compliance : contains\n    Core_LC_Master_Data ||--o{ Transaction_Tracking : contains\n    @enduml",
	"requirements": "Letter of Credit Requirement\n\n\nSection 1\n\n\n1. The Background of LC Business\n\n\na. The Origin of LC\n\nThe letter of credit (LC) has its roots in medieval trade practices. Merchants needed a secure way to conduct transactions across long distances and between different legal and economic systems. As international trade expanded, the need for a mechanism that could reduce the risk of non - payment and non - delivery of goods . The modern concept of LC emerged as a financial instrument that provides a guarantee to both the buyer and the seller in a trade transaction. It was developed to bridge the trust gap between parties who may not have a long - standing business relationship or may be located in different countries with varying levels of legal and regulatory environments.\nb. Why Business Requires LC\n\nBusinesses require LCs for several key reasons. For sellers, an LC provides assurance that they will receive payment for the goods or services they provide, as long as they meet the terms and conditions specified in the LC. This reduces the risk of non - payment from the buyer, especially in international trade where the seller may have limited legal recourse if the buyer defaults. For buyers, an LC allows them to ensure that the goods or services they receive meet the agreed - upon specifications. The issuing bank will only release payment to the seller when the required documents, such as bills of lading, invoices, and inspection certificates, are presented and verified to be in compliance with the LC terms. In addition, LCs can also be used to manage cash flow, as the buyer does not need to make full payment upfront but can rely on the bank's credit support.\nc. The End - to - End Process of LC when Issuing to Expire\nIssuance: The buyer (applicant) requests their bank (issuing bank) to issue an LC in favor of the seller (beneficiary). The buyer provides details such as the description of goods or services, quantity, price, delivery terms, and required documents. The issuing bank reviews the request and, if satisfied, issues the LC. The LC is then sent to the seller's bank (advising bank), usually through a secure communication channel like SWIFT.b\nAdvising: The advising bank verifies the authenticity of the LC and notifies the seller. The seller reviews the LC terms to ensure they can be met. If there are any discrepancies, the seller can request the buyer to amend the LC through the issuing bank.\nShipment and Document Preparation: Once the seller is satisfied with the LC terms, they ship the goods or perform the services. Along with the shipment, the seller prepares the required documents as per the LC specifications, such as commercial invoices, packing lists, bills of lading, and certificates of origin.\nPresentation of Documents: The seller presents the documents to their bank (negotiating bank, which may be the same as the advising bank). The negotiating bank reviews the documents to ensure they are in strict compliance with the LC terms. If the documents are in order, the negotiating bank may advance funds to the seller (negotiation), subject to reimbursement from the issuing bank.\nReimbursement Request: The negotiating bank sends the documents to the issuing bank and requests reimbursement. The issuing bank reviews the documents. If they are compliant, the issuing bank reimburses the negotiating bank and debits the buyer's account.\n\n\nExpiry: The LC has an expiration date. If the seller fails to present the documents within the validity period of the LC, the LC becomes invalid, and the seller loses the guarantee of payment under that LC.\nd. The Relevant Products like LA, Import Load, Export Load, Collections\n\nLetter of Assurance (LA): While not as commonly used as LCs, a Letter of Assurance is a document where a bank or other financial institution provides a guarantee on behalf of a client. It is often used in situations where a more flexible form of guarantee is required compared to an LC. For example, in construction projects, an LA may be used to guarantee the performance of a contractor. The relationship with LC is that both are forms of bank - backed guarantees, but LCs are more standardized and designed specifically for trade transactions.\nImport Loan: An import loan is a financing facility provided to importers to help them pay for the goods they are importing. It is related to LCs in that an importer may use an LC to secure the goods and then obtain an import loan from the bank to pay the amount due under the LC. The bank providing the import loan will consider the security provided by the LC and the underlying trade transaction.\nExport Loan: Similar to an import loan, an export loan is provided to exporters. Exporters may use the security of an LC in hand as collateral to obtain an export loan, which helps them finance the production and shipment of goods. This allows exporters to meet the working capital requirements associated with fulfilling the export order.\nCollections: Collections is a method of trade finance where the exporter entrusts the collection of payment from the importer to their bank. Unlike an LC, in collections, the bank's role is more limited to facilitating the transfer of documents and funds. There is no guarantee of payment from the bank. Collections can be used in conjunction with LCs in some cases, for example, when part of the payment is to be made under an LC and the remaining amount through a collection.\ne. Relation Diagram Across All of These Products\n\n\n\n\ngraph TD;\n\n    A[Letter of Credit] -->|Provides security for| B[Import Loan];\n\n    A -->|Provides security for| C[Export Loan];\n\n    D[Letter of Assurance] -->|Similar concept of guarantee| A;\n\n    E[Collections] -->|Can be used in combination with| A;\n\n2. The Terminology of LC Business\n\n\nApplicant: The party who requests the issuing bank to open a letter of credit, usually the buyer in a trade transaction.\nBeneficiary: The party in whose favor the letter of credit is issued, typically the seller.\n\n\nIssuing Bank: The bank that opens the letter of credit at the request of the applicant.\n\n\nAdvising Bank: The bank that receives the LC from the issuing bank and notifies the beneficiary, verifying its authenticity.\n\n\nNegotiating Bank: The bank that purchases the documents from the beneficiary and advances funds, subject to reimbursement from the issuing bank.\nConfirming Bank: A bank that adds its confirmation to the LC, guaranteeing payment in addition to the issuing bank.\n\n\nRevocable LC: An LC that can be amended or cancelled by the issuing bank without prior notice to the beneficiary.\n\n\nIrrevocable LC: An LC that cannot be amended or cancelled without the consent of all parties involved (applicant, beneficiary, and confirming bank if applicable).\n\n\nSight LC: A type of LC where payment is made immediately upon presentation of compliant documents.\nUsance LC: A LC where payment is deferred to a future date, usually after a specified number of days or upon a certain event.\n\n\nDocumentary LC: An LC that requires the presentation of specified documents for payment.\n\n\nClean LC: An LC where no documents other than the draft are required for payment.\n\n\nTransferable LC: An LC that allows the beneficiary to transfer all or part of the credit to one or more second beneficiaries.\nBack - to - Back LC: Two LCs are issued, where the first LC serves as security for the second LC, often used in intermediate trade.\n\n\nRed Clause LC: An LC that allows the beneficiary to receive an advance payment from the advising or negotiating bank.\n\n\nGreen Clause LC: Similar to a red clause LC but with more detailed terms and often used for commodity trade.\nBill of Lading: A document issued by a carrier that acknowledges receipt of goods for shipment and serves as evidence of the contract of carriage.\n\n\nCommercial Invoice: A document issued by the seller to the buyer, detailing the goods or services sold, quantity, price, and terms of payment.\n\n\nPacking List: A document that lists the contents of a shipment, including details such as the quantity, description, and packaging of each item.\nCertificate of Origin: A document that certifies the country of origin of the goods.\n\n\nInspection Certificate: A document issued by an independent inspection agency, verifying the quality, quantity, or other characteristics of the goods.\n\n\nCertificate of Insurance: A document that provides evidence of insurance coverage for the goods during transit.\n\n\nDraft (Bill of Exchange): A written order from the beneficiary (drawer) to the issuing bank (drawee) to pay a specified amount of money.\nPartial Shipment: The shipment of goods in installments over a period of time instead of as a single consignment.\n\n\nTransshipment: The transfer of goods from one means of conveyance to another during transit.\n\n\nPresentation Period: The period within which the beneficiary must present the documents to the bank for negotiation or payment.\n\n\nExpiry Date: The last date on which the documents can be presented under the LC.\nExpiry Date: The last date on which the documents can be presented under the LC.\n\n\nLatest Shipment Date: The deadline by which the goods must be shipped as per the LC terms.\n\n\nStale Documents: Documents that are presented after the expiry date or after a reasonable time has elapsed since the date of issue.\n\n\nDiscrepancy: A difference between the documents presented and the terms and conditions of the LC.\n\n\nAmendment: A change made to the terms and conditions of an existing LC.\nAmendment: A change made to the terms and conditions of an existing LC.\n\n\nReimbursement: The process by which the issuing bank pays the negotiating bank or other banks that have advanced funds under the LC.\n\n\nReimbursing Bank: A bank that is authorized by the issuing bank to make payments to the claiming bank.\n\n\nCounter - Indemnity: A guarantee provided by the applicant to the issuing bank to indemnify the bank in case of loss due to issuing the LC.\nStandby LC: An LC that serves as a guarantee for the performance of an obligation rather than for the payment of goods or services.\n\n\nPerformance LC: A type of standby LC that guarantees the performance of a contract, such as a construction contract.\n\n\nFinancial LC: A standby LC used to guarantee financial obligations, such as repayment of a loan.\n\n\nBid Bond LC: A LC used to guarantee that a bidder will enter into a contract if their bid is accepted.\nAdvance Payment Bond LC: A LC that guarantees the repayment of an advance payment made by the buyer to the seller.\n\n\nRetention Money Bond LC: A LC that guarantees the payment of retention money withheld by the buyer until the completion of a project.\n\n\nCustoms Bond LC: A LC used to guarantee the payment of customs duties and other charges.\n\n\nDocumentary Collection: A method of trade finance where the exporter's bank sends the documents to the importer's bank for collection of payment.\nDocuments Against Payment (D/P): In documentary collection, the importer's bank releases the documents to the importer only when the payment is made.\n\n\nDocuments Against Acceptance (D/A): In documentary collection, the importer's bank releases the documents to the importer upon acceptance of a draft for payment at a future date.\n\n\nUniform Customs and Practice for Documentary Credits (UCP): An international set of rules that govern the operation of documentary credits.\nInternational Chamber of Commerce (ICC): The organization that publishes the UCP and promotes international trade.\n\n\nSWIFT (Society for Worldwide Interbank Financial Telecommunication): A messaging network used by banks to communicate regarding LCs and other financial transactions.\n\n\nMargin: The amount of collateral or deposit required by the issuing bank from the applicant when opening an LC.\nCredit Limit: The maximum amount of credit that a bank is willing to extend to a customer for LC - related transactions.\n\n\nDrawdown: The act of the beneficiary requesting payment under the LC by presenting the required documents.\n\n\nSection 2\n\n\n3. the data model of LC business\n\n\na. Data Domains and Their Business Nature\nSection 2\n\n\n3. the data model of LC business\n\n\na. Data Domains and Their Business Nature\n\n\nCore LC Master Data: This domain encompasses the fundamental information related to the letter of credit itself. It includes details that define the core characteristics of the LC, such as identification details, parties involved, and key dates. This data serves as the foundation for all other operations and interactions related to the LC.\nDocumentary Compliance: Focused on ensuring that the documents presented under the LC meet the specified terms and conditions. It tracks document details, compliance status, and any discrepancies found during the document review process. This domain is crucial for determining whether payment can be made under the LC.\nTransaction Tracking: Monitors the entire lifecycle of the LC transaction, from issuance to settlement. It records events, actions taken by different parties, and the current status of the transaction at any given time. This helps in providing visibility and transparency into the progress of the LC.\nSWIFT Integration: Deals with the data related to the communication and interaction with the SWIFT network. It includes message details, SWIFT codes, and other information necessary for sending and receiving LC - related messages securely and accurately.\nFinancial Accounting: Manages the financial aspects of the LC, such as amounts involved, payments made, and accounting entries. It ensures that all financial transactions related to the LC are properly recorded and accounted for in the bank's financial systems.\n\n\n\n\nb. Data Tables and Columns\n\n\nCore LC Master Data\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\n\n\nDescription\n\n\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n1\n\n\nLC_ID\n\n\nLetter of Credit Identification\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n1\n\n\nLC_ID\n\n\nLetter of Credit Identification\n\n\nA unique identifier assigned to each letter of credit\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n2\n\n\nApplicant_ID\n\n\nApplicant Identification\n\n\nUnique identifier for the party requesting the LC (usually the buyer)\n\n\nVARCHAR\n\n\n15\n\n\nMandatory\n\n\n3\n\n\nBeneficiary_ID\n\n\nBeneficiary Identification\n\n\nUnique identifier for the party in whose favor the LC is issued (usually the seller)\n\n\nVARCHAR\n\n\n15\n\n\nMandatory\n\n\n4\nVARCHAR\n\n\n15\n\n\nMandatory\n\n\n4\n\n\nIssuing_Bank_ID\n\n\nIssuing Bank Identification\n\n\nUnique identifier for the bank issuing the LC\n\n\nVARCHAR\n\n\n15\n\n\nMandatory\n\n\n5\n\n\nAdvising_Bank_ID\n\n\nAdvising Bank Identification\n\n\nUnique identifier for the bank that notifies the beneficiary about the LC\n\n\nVARCHAR\n\n\n15\n\n\nOptional\n\n\n6\n\n\nLC_Type\n\n\nLetter of Credit Type\n\n\nType of the LC, such as Irrevocable, Revocable, etc.\n\n\nVARCHAR\n\n\n20\nLetter of Credit Type\n\n\nType of the LC, such as Irrevocable, Revocable, etc.\n\n\nVARCHAR\n\n\n20\n\n\nMandatory  Enum: 'Irrevocable', 'Revocable', 'Sight', 'Usance', 'Transferable', 'Back - to - Back'\n\n\n7\n\n\nLC_Currency\n\n\nLetter of Credit Currency\n\n\nCurrency in which the LC amount is denominated\n\n\nVARCHAR\n\n\n3\n\n\nMandatory\n\n\n8\n\n\nLC_Amount\n\n\nLetter of Credit Amount\n\n\nTotal amount covered by the LC\n\n\nDECIMAL\n\n\n15,2\n\n\nMandatory\n\n\n9\n\n\nIssue_Date\n\n\nLC Issue Date\n\n\nDate on which the LC is issued by the bank\n15,2\n\n\nMandatory\n\n\n9\n\n\nIssue_Date\n\n\nLC Issue Date\n\n\nDate on which the LC is issued by the bank\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n10\n\n\nExpiry_Date\n\n\nLC Expiry Date\n\n\nDate by which the documents must be presented for payment\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n11\n\n\nLatest_Shipment_Date\n\n\nLatest Shipment Date\n\n\nDeadline for shipping the goods as per the LC terms\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n12\n\n\nLC_Description\n\n\nLetter of Credit Description\n\n\nA brief description of the goods or services covered by the LC\n\n\nVARCHAR\nA brief description of the goods or services covered by the LC\n\n\nVARCHAR\n\n\n255\n\n\nOptional\n\n\nDocumentary Compliance\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\n\n\nDescription\n\n\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n13\n\n\nDocument_ID\n\n\nDocument Identification\n\n\nUnique identifier for each document related to the LC\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n14\n\n\nLC_ID_Ref\n\n\nLetter of Credit Identification Reference\n\n\nReferences the LC_ID from the Core LC Master Data table\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n15\nReferences the LC_ID from the Core LC Master Data table\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n15\n\n\nDocument_Type\n\n\nDocument Type\n\n\nType of the document, e.g., Bill of Lading, Commercial Invoice, etc.\n\n\nVARCHAR\n\n\n30\n\n\nMandatory  Enum: 'Bill of Lading', 'Commercial Invoice', 'Packing List', 'Certificate of Origin', 'Inspection Certificate', 'Certificate of Insurance'\n\n\n16\n\n\nDocument_Status\n\n\nDocument Status\n\n\nStatus of the document in terms of compliance, e.g., Pending Review, Compliant, Discrepant\nStatus of the document in terms of compliance, e.g., Pending Review, Compliant, Discrepant\n\n\nVARCHAR\n\n\n20\n\n\nMandatory  Enum: 'Pending Review', 'Compliant', 'Discrepant'\n\n\n17\n\n\nSubmission_Date\n\n\nDocument Submission Date\n\n\nDate on which the document was submitted\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n18\n\n\nReview_Date\n\n\nDocument Review Date\n\n\nDate on which the document was reviewed\n\n\nDATE\n\n\n-\n\n\nOptional\n\n\n19\n\n\nDiscrepancy_Details\n\n\nDiscrepancy Details\n\n\nDetails of any discrepancies found in the document\nDiscrepancy_Details\n\n\nDiscrepancy Details\n\n\nDetails of any discrepancies found in the document\n\n\nVARCHAR\n\n\n255\n\n\nOptional\n\n\n20\n\n\nDocument_Reference_Number\n\n\nDocument Reference Number\n\n\nUnique reference number assigned to the document by the issuer\n\n\nVARCHAR\n\n\n30\n\n\nOptional\n\n\nTransaction Tracking\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\n\n\nDescription\n\n\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n21\n\n\nTransaction_ID\n\n\nTransaction Identification\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n21\n\n\nTransaction_ID\n\n\nTransaction Identification\n\n\nUnique identifier for each transaction event related to the LC\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n22\n\n\nLC_ID_Ref\n\n\nLetter of Credit Identification Reference\n\n\nReferences the LC_ID from the Core LC Master Data table\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n23\n\n\nTransaction_Date\n\n\nTransaction Date\n\n\nDate on which the transaction event occurred\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n24\n\n\nTransaction_Type\n\n\nTransaction Type\nDATE\n\n\n-\n\n\nMandatory\n\n\n24\n\n\nTransaction_Type\n\n\nTransaction Type\n\n\nType of the transaction event, e.g., LC Issued, Documents Presented, Payment Made\n\n\nVARCHAR\n\n\n30\n\n\nMandatory  Enum: 'LC Issued', 'Documents Presented', 'Payment Made', 'Amendment Requested', 'Amendment Approved', 'LC Expired'\n\n\n25\n\n\nParty_Involved\n\n\nParty Involved\n\n\nThe party that carried out the transaction event, e.g., Applicant, Beneficiary, Issuing Bank\n\n\nVARCHAR\n\n\n30\nVARCHAR\n\n\n30\n\n\nMandatory  Enum: 'Applicant', 'Beneficiary', 'Issuing Bank', 'Advising Bank', 'Negotiating Bank'\n\n\n26\n\n\nTransaction_Status\n\n\nTransaction Status\n\n\nCurrent status of the transaction, e.g., In Progress, Completed, Pending\n\n\nVARCHAR\n\n\n20\n\n\nMandatory  Enum: 'In Progress', 'Completed', 'Pending'\n\n\n27\n\n\nPrevious_Transaction_ID\n\n\nPrevious Transaction Identification\n\n\nReferences the ID of the previous related transaction\n\n\nVARCHAR\n\n\n20\n\n\nOptional\n\n\nSWIFT Integration\n\n\n\n\nNumber\nVARCHAR\n\n\n20\n\n\nOptional\n\n\nSWIFT Integration\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\n\n\nDescription\n\n\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n28\n\n\nSWIFT_Message_ID\n\n\nSWIFT Message Identification\n\n\nUnique identifier for each SWIFT message related to the LC\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n29\n\n\nLC_ID_Ref\n\n\nLetter of Credit Identification Reference\n\n\nReferences the LC_ID from the Core LC Master Data table\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n30\n\n\nSWIFT_Message_Type\n\n\nSWIFT Message Type\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n30\n\n\nSWIFT_Message_Type\n\n\nSWIFT Message Type\n\n\nType of the SWIFT message, e.g., MT700 (Issue of a Documentary Credit), MT734 (Notification of Discrepancies)\n\n\nVARCHAR\n\n\n10\n\n\nMandatory  Enum: 'MT700', 'MT701', 'MT710', 'MT720', 'MT730', 'MT734'\n\n\n31\n\n\nSender_SWIFT_Code\n\n\nSender SWIFT Code\n\n\nSWIFT code of the bank sending the message\n\n\nVARCHAR\n\n\n11\n\n\nMandatory\n\n\n32\n\n\nReceiver_SWIFT_Code\n\n\nReceiver SWIFT Code\n\n\nSWIFT code of the bank receiving the message\n\n\nVARCHAR\nReceiver SWIFT Code\n\n\nSWIFT code of the bank receiving the message\n\n\nVARCHAR\n\n\n11\n\n\nMandatory\n\n\n33\n\n\nMessage_Sent_Date\n\n\nMessage Sent Date\n\n\nDate on which the SWIFT message was sent\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n34\n\n\nMessage_Received_Date\n\n\nMessage Received Date\n\n\nDate on which the SWIFT message was received\n\n\nDATE\n\n\n-\n\n\nOptional\n\n\n35\n\n\nMessage_Content\n\n\nSWIFT Message Content\n\n\nThe actual content of the SWIFT message\n\n\nTEXT\n\n\n-\n\n\nOptional\n\n\nFinancial Accounting\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\nTEXT\n\n\n-\n\n\nOptional\n\n\nFinancial Accounting\n\n\n\n\nNumber\n\n\nShort Name\n\n\nLong Name\n\n\nDescription\n\n\nData Type\n\n\nLength\n\n\nMandatory/Optional\n\n\n36\n\n\nAccounting_Entry_ID\n\n\nAccounting Entry Identification\n\n\nUnique identifier for each financial accounting entry related to the LC\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n37\n\n\nLC_ID_Ref\n\n\nLetter of Credit Identification Reference\n\n\nReferences the LC_ID from the Core LC Master Data table\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n38\n\n\nAccount_Number\n\n\nAccount Number\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n38\n\n\nAccount_Number\n\n\nAccount Number\n\n\nBank account number associated with the accounting entry\n\n\nVARCHAR\n\n\n20\n\n\nMandatory\n\n\n39\n\n\nDebit_Amount\n\n\nDebit Amount\n\n\nAmount debited in the accounting entry\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n40\n\n\nCredit_Amount\n\n\nCredit Amount\n\n\nAmount credited in the accounting entry\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n41\n\n\nAccounting_Date\n\n\nAccounting Date\n\n\nDate on which the accounting entry is made\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n42\nAccounting Date\n\n\nDate on which the accounting entry is made\n\n\nDATE\n\n\n-\n\n\nMandatory\n\n\n42\n\n\nAccounting_Description\n\n\nAccounting Description\n\n\nDescription of the financial transaction in the accounting entry\n\n\nVARCHAR\n\n\n255\n\n\nOptional\n\n\n43\n\n\nPayment_Status\n\n\nPayment Status\n\n\nStatus of the payment related to the accounting entry, e.g., Paid, Pending, Reversed\n\n\nVARCHAR\n\n\n20\n\n\nMandatory  Enum: 'Paid', 'Pending', 'Reversed'\n\n\n44\n\n\nSettlement_Date\n\n\nSettlement Date\n20\n\n\nMandatory  Enum: 'Paid', 'Pending', 'Reversed'\n\n\n44\n\n\nSettlement_Date\n\n\nSettlement Date\n\n\nDate on which the payment is settled\n\n\nDATE\n\n\n-\n\n\nOptional\n\n\n45\n\n\nFee_Amount\n\n\nFee Amount\n\n\nAny fees associated with the LC transaction, such as issuance fees, negotiation fees\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n46\n\n\nInterest_Amount\n\n\nInterest Amount\n\n\nInterest amount related to the LC, if applicable\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n47\n\n\nExchange_Rate\n\n\nExchange Rate\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n47\n\n\nExchange_Rate\n\n\nExchange Rate\n\n\nExchange rate used for currency conversion, if applicable\n\n\nDECIMAL\n\n\n10,6\n\n\nOptional\n\n\n48\n\n\nMargin_Amount\n\n\nMargin Amount\n\n\nAmount of collateral or margin held by the bank for the LC\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n49\n\n\nReserve_Amount\n\n\nReserve Amount\n\n\nAmount set aside as a reserve for potential losses or contingencies related to the LC\n\n\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n50\n\n\nReconciliation_Status\n\n\nReconciliation Status\nDECIMAL\n\n\n15,2\n\n\nOptional\n\n\n50\n\n\nReconciliation_Status\n\n\nReconciliation Status\n\n\nStatus of the accounting reconciliation for the LC - related transactions, e.g., Reconciled, Unreconciled\n\n\nVARCHAR\n\n\n20\n\n\nMandatory  Enum: 'Reconciled', 'Unreconciled'\n\n\n\n\n\n\nSection 3. Default Values\n\n\n4. Default Values of Each Column\n\n\nCore LC Master Data\nSection 3. Default Values\n\n\n4. Default Values of Each Column\n\n\nCore LC Master Data\n\n\nLC_ID: As a unique identifier for each letter of credit, it has no default value as it's generated upon LC creation. This is a mandatory field. It maps to the SWIFT 700 message, with the format being an alphanumeric string of up to 20 characters.\n\n\nApplicant_ID: This unique identifier for the applicant (usually\nApplicant_ID: This unique identifier for the applicant (usually\n\n\n the buyer) has no default value as it's assigned by the bank's customer system. It's mandatory. In the SWIFT 700 message, it's mapped with a format of an alphanumeric string, up to 15 characters.\nBeneficiary_ID: For the unique identifier of the beneficiary (usually the seller), there's no default value, assigned by the bank's system, and it's mandatory. It maps to the SWIFT 700 message with an alphanumeric string format, up to 15 characters.b\n\nIssuing_Bank_ID: The unique identifier for the issuing bank has no default value (being an internal bank code) and is mandatory. It's mapped to the SWIFT 700 message, formatted as an alphanumeric string, up to 15 characters.\nAdvising_Bank_ID: Its default value is an empty string (''), making it an optional field. When present, it maps to the SWIFT 700 message with an alphanumeric string format, up to 15 characters.\n\n\nLC_Type: The default value is 'Irrevocable', and it's mandatory. It maps to the SWIFT 700 message, with the format being one of the enumerated values like 'Irrevocable', 'Revocable', 'Sight', 'Usance', 'Transferable', 'Back - to - Back'.\nLC_Currency: The default value is 'USD', and it's mandatory. It maps to the SWIFT 700 message as a three - letter ISO 4217 currency code.\n\n\nLC_Amount: The default value is 0.00, and it's mandatory. In the SWIFT 700 message, it's mapped with a format of a decimal number having two decimal places, with a total of up to 15 digits.\n\n\nIssue_Date: The default value is the current system date, and it's mandatory. It maps to the SWIFT 700 message in the YYYY - MM - DD format.\nExpiry_Date: By default, it's set as the Issue_Date + 90 days (though this period can be adjusted), and it's mandatory. It maps to the SWIFT 700 message in the YYYY - MM - DD format.\n\n\nLatest_Shipment_Date: The default value is Expiry_Date - 15 days (this buffer can be adjusted), and it's mandatory. It maps to the SWIFT 700 message in the YYYY - MM - DD format.\nLC_Description: With a default value of an empty string (''), it's an optional field. When used, it maps to the SWIFT 700 message as an alphanumeric string, up to 255 characters.\n\n\nDocumentary Compliance\n\n\nDocument_ID: As a unique identifier for each document related to the LC, it has no default value as it's generated upon document submission. It's mandatory and is not a SWIFT mapped field.\nLC_ID_Ref: Its default value is an empty string ('') and will be populated when associated with an LC. It's mandatory and maps to the SWIFT 700 message as an alphanumeric string, up to 20 characters.\n\n\nDocument_Type: The default value is 'Commercial Invoice', and it's mandatory. It's not a SWIFT mapped field.\n\n\nDocument_Status: The default value is 'Pending Review', and it's mandatory. It's not a SWIFT mapped field.\nSubmission_Date: The default value is the current system date, and it's mandatory. It's not a SWIFT mapped field.\n\n\nReview_Date: With a default value of an empty string (''), it's an optional field. It's not a SWIFT mapped field.\n\n\nDiscrepancy_Details: The default value is an empty string (''), making it an optional field. It's not a SWIFT mapped field.\n\n\nDocument_Reference_Number: Its default value is an empty string (''), so it's an optional field. It's not a SWIFT mapped field.\nTransaction Tracking\n\n\nTransaction_ID: As a unique identifier for each transaction event related to the LC, it has no default value as it's generated upon transaction occurrence. It's mandatory and is not a SWIFT mapped field.\n\n\nLC_ID_Ref: Its default value is an empty string ('') and will be populated when associated with an LC. It's mandatory and maps to the SWIFT 700 message as an alphanumeric string, up to 20 characters.\nTransaction_Date: The default value is the current system date, and it's mandatory. It's not a SWIFT mapped field.\n\n\nTransaction_Type: The default value is 'LC Issued', and it's mandatory. It's not a SWIFT mapped field.\n\n\nParty_Involved: The default value is 'Issuing Bank', and it's mandatory. It's not a SWIFT mapped field.\n\n\nTransaction_Status: The default value is 'In Progress', and it's mandatory. It's not a SWIFT mapped field.\nPrevious_Transaction_ID: With a default value of an empty string (''), it's an optional field. It's not a SWIFT mapped field.\n\n\nSWIFT Integration\n\n\nSWIFT_Message_ID: As a unique identifier for each SWIFT message related to the LC, it has no default value as it's generated by the SWIFT system. It's mandatory and maps to the SWIFT 700 message as an alphanumeric string, up to 20 characters.\nLC_ID_Ref: Its default value is an empty string ('') and will be populated when associated with an LC. It's mandatory and maps to the SWIFT 700 message as an alphanumeric string, up to 20 characters.\n\n\nSWIFT_Message_Type: The default value is 'MT700', and it's mandatory. It maps to the SWIFT 700 message with the format being one of the valid SWIFT message type codes.\nSender_SWIFT_Code: The default value is the bank's own SWIFT code, and it's mandatory. It maps to the SWIFT 700 message as an eleven - character alphanumeric SWIFT code.\n\n\nReceiver_SWIFT_Code: Its default value is an empty string ('') and will be populated based on the recipient bank. It's mandatory and maps to the SWIFT 700 message as an eleven - character alphanumeric SWIFT code.\nMessage_Sent_Date: The default value is the current system date, and it's mandatory. It maps to the SWIFT 700 message in the YYYY - MM - DD format.\n\n\nMessage_Received_Date: With a default value of an empty string (''), it's an optional field. It maps to the SWIFT 700 message in the YYYY - MM - DD format.\n\n\nMessage_Content: The default value is an empty string (''), making it an optional field. It maps to the SWIFT 700 message with text content following SWIFT message structure rules.\nFinancial Accounting\n\n\nAccounting_Entry_ID: As a unique identifier for each financial accounting entry related to the LC, it has no default value as it's generated upon accounting entry creation. It's mandatory and is not a SWIFT mapped field.\n\n\nLC_ID_Ref: Its default value is an empty string ('') and will be populated when associated with an LC. It's mandatory and maps to the SWIFT 700 message as an alphanumeric string, up to 20 characters.\nAccount_Number: The default value is an empty string ('') and will be populated based on the account used. It's mandatory and is not a SWIFT mapped field.\n\n\nDebit_Amount: The default value is 0.00, making it an optional field. It's not a SWIFT mapped field.\n\n\nCredit_Amount: The default value is 0.00, so it's an optional field. It's not a SWIFT mapped field.\n\n\nAccounting_Date: The default value is the current system date, and it's mandatory. It's not a SWIFT mapped field.\nAccounting_Description: With a default value of an empty string (''), it's an optional field. It's not a SWIFT mapped field.\n\n\nPayment_Status: The default value is 'Pending', and it's mandatory. It's not a SWIFT mapped field.\n\n\nSettlement_Date: Its default value is an empty string (''), so it's an optional field. It's not a SWIFT mapped field.\n\n\nFee_Amount: The default value is 0.00, making it an optional field. It's not a SWIFT mapped field.\nInterest_Amount: The default value is 0.00, so it's an optional field. It's not a SWIFT mapped field.\n\n\nExchange_Rate: The default value is 1.000000 (for the same currency by default), making it an optional field. It's not a SWIFT mapped field.\n\n\nMargin_Amount: The default value is 0.00, so it's an optional field. It's not a SWIFT mapped field.\n\n\nReserve_Amount: The default value is 0.00, making it an optional field. It's not a SWIFT mapped field.\nReconciliation_Status: The default value is 'Unreconciled', and it's mandatory. It's not a SWIFT mapped field.\n\n\n\n\n\n\n\n\n\n\n\n\nSection 4. Validation\n\n\n4. Validation Rules of the Data Model\n\n\nCore LC Master Data\n\n\nLC_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be a unique alphanumeric string. This ensures that each letter of credit can be distinctly identified within the system.\n\n\nRule 2: The length should not exceed 20 characters to fit within the defined data storage and processing constraints.\nRule 3: Cannot be left blank as it is the primary identifier for the LC.\n\n\nDependency Validation: Should not match any existing LC_ID in the system to avoid confusion and data integrity issues.\n\n\nSample Values: 'LC00012345', 'ABC123LC', 'USLC9876'\n\n\nError Message: 'The entered Letter of Credit Identification (LC_ID) is either not unique, exceeds the 20 - character limit, or is blank. Please enter a unique alphanumeric string of up to 20 characters.'\n\n\nApplicant_ID\n\nSingle Column Validation:\nApplicant_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string as it is used to identify the applicant in a standardized format.\n\n\nRule 2: The length should be between 1 and 15 characters to match the defined data structure.\n\n\nRule 3: Cannot be blank as it is essential to associate the LC with the correct applicant.\n\n\nDependency Validation: Should correspond to an existing valid applicant record in the bank's customer system.\nSample Values: 'APP001', 'USBUYER12', 'CUSTABC1'\n\n\nError Message: 'The Applicant Identification (Applicant_ID) you entered is not in the correct alphanumeric format, is outside the 1 - 15 character length range, or is blank. Also, ensure it matches an existing applicant in our system.'\n\n\nBeneficiary_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string for consistent identification of the beneficiary.\nRule 1: Must be an alphanumeric string for consistent identification of the beneficiary.\n\n\nRule 2: Length should not be more than 15 characters as per the data model design.\n\n\nRule 3: Cannot be empty as it is crucial for payment and transaction processing.\n\n\nDependency Validation: Should map to a valid beneficiary record in the bank's system.\n\n\nSample Values: 'BEN002', 'EXPORTER34', 'SELLERXYZ'\nSample Values: 'BEN002', 'EXPORTER34', 'SELLERXYZ'\n\n\nError Message: 'The Beneficiary Identification (Beneficiary_ID) is incorrect. It must be an alphanumeric string within 15 characters and not blank. Additionally, it should match a valid beneficiary in our records.'\n\n\nIssuing_Bank_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string representing the issuing bank's unique code.\n\n\nRule 2: Length should be within 15 characters to conform to the data model.\nRule 2: Length should be within 15 characters to conform to the data model.\n\n\nRule 3: Cannot be null as it defines the originator of the LC.\n\n\nDependency Validation: Should match an existing valid issuing bank record in the bank's internal system.\n\n\nSample Values: 'ISB003', 'US_BANK_1', 'BANKABC'\nSample Values: 'ISB003', 'US_BANK_1', 'BANKABC'\n\n\nError Message: 'The Issuing Bank Identification (Issuing_Bank_ID) you provided is not in the proper alphanumeric format, exceeds the 15 - character limit, or is not a recognized bank ID in our system. Please correct it.'\n\n\nAdvising_Bank_ID\n\nSingle Column Validation:\n\n\nRule 1: If provided, must be an alphanumeric string.\n\n\nRule 2: Length should not exceed 15 characters if filled.\nRule 2: Length should not exceed 15 characters if filled.\n\n\nRule 3: Can be left blank if there is no advising bank involved.\n\n\nDependency Validation: If present, should match a valid bank record in the system.\n\n\nSample Values: 'ADV004', 'LOCAL_BANK', ''\n\n\nError Message: 'If you enter an Advising Bank Identification (Advising_Bank_ID), it should be an alphanumeric string within 15 characters. If there's no advising bank, you can leave this field blank.'\n\n\nLC_Type\n\nSingle Column Validation:\nLC_Type\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (Irrevocable, Revocable, Sight, Usance, Transferable, Back - to - Back).\n\n\nRule 2: Cannot be left blank as the type of LC determines its operational characteristics.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: Some transaction tracking and financial accounting rules may depend on the LC type. For example, payment terms vary based on whether it's a Sight or Usance LC.\n\n\nSample Values: 'Irrevocable', 'Sight', 'Transferable'\nSample Values: 'Irrevocable', 'Sight', 'Transferable'\n\n\nError Message: 'The entered Letter of Credit Type (LC_Type) is incorrect. It must be one of the valid options: Irrevocable, Revocable, Sight, Usance, Transferable, or Back - to - Back. Please check and correct the entry.'\n\n\nLC_Currency\n\nSingle Column Validation:\n\n\nRule 1: Must be a three - letter ISO 4217 currency code.\n\n\nRule 2: Cannot be blank as it determines the currency of the LC amount.\n\n\nRule 3: Must be a recognized currency code.\nRule 3: Must be a recognized currency code.\n\n\nDependency Validation: Exchange rate calculations and financial reporting depend on the LC currency.\n\n\nSample Values: 'USD', 'EUR', 'GBP'\n\n\nError Message: 'The Letter of Credit Currency (LC_Currency) you entered is not a valid three - letter ISO 4217 currency code or is blank. Please enter a recognized currency code, such as USD, EUR, or GBP.'\n\n\nLC_Amount\n\nSingle Column Validation:\n\n\nRule 1: Must be a non - negative decimal number.\nLC_Amount\n\nSingle Column Validation:\n\n\nRule 1: Must be a non - negative decimal number.\n\n\nRule 2: Should have a maximum of 15 digits in total and 2 digits after the decimal point.\n\n\nRule 3: Cannot be zero for a valid LC amount (except in special cases that need to be approved separately).\n\n\nDependency Validation: The sum of all payments and adjustments related to the LC should not exceed the LC amount.\n\n\nSample Values: '1000.00', '50000.50', '250000.00'\nSample Values: '1000.00', '50000.50', '250000.00'\n\n\nError Message: 'The Letter of Credit Amount (LC_Amount) is invalid. It should be a non - negative decimal number with up to 15 digits in total and 2 digits after the decimal point, and not equal to zero (unless otherwise approved). Please correct the amount.'\n\n\nIssue_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the format YYYY - MM - DD.\n\n\nRule 2: Cannot be a future date as the LC cannot be issued in the future.\nRule 2: Cannot be a future date as the LC cannot be issued in the future.\n\n\nRule 3: Cannot be blank as it marks the start of the LC's validity period.\n\n\nDependency Validation: Other dates like Expiry_Date and Latest_Shipment_Date should be after the Issue_Date.\n\n\nSample Values: '2024 - 01 - 15', '2023 - 12 - 30', '2024 - 05 - 10'\nSample Values: '2024 - 01 - 15', '2023 - 12 - 30', '2024 - 05 - 10'\n\n\nError Message: 'The LC Issue Date (Issue_Date) you entered is not in the correct YYYY - MM - DD format, is a future date, or is blank. The date should be in the past and in the proper format. Please correct it.'\n\n\nExpiry_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Should be after the Issue_Date to ensure the LC has a valid lifespan.\nRule 2: Should be after the Issue_Date to ensure the LC has a valid lifespan.\n\n\nRule 3: Cannot be blank as it defines when the LC becomes invalid for document presentation.\n\n\nDependency Validation: Latest_Shipment_Date should be before the Expiry_Date.\n\n\nSample Values: '2024 - 04 - 15', '2023 - 12 - 31', '2024 - 06 - 10'\nSample Values: '2024 - 04 - 15', '2023 - 12 - 31', '2024 - 06 - 10'\n\n\nError Message: 'The LC Expiry Date (Expiry_Date) is incorrect. It should be a valid date in the YYYY - MM - DD format, after the Issue_Date, and not blank. Please review and correct the date.'\n\n\nLatest_Shipment_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Should be before the Expiry_Date and after the Issue_Date.\nRule 2: Should be before the Expiry_Date and after the Issue_Date.\n\n\nRule 3: Cannot be blank as it sets the deadline for shipping the goods.\n\n\nDependency Validation: Closely related to the Expiry_Date and Issue_Date to ensure proper trade flow.\n\n\nSample Values: '2024 - 03 - 30', '2023 - 12 - 20', '2024 - 05 - 25'\nSample Values: '2024 - 03 - 30', '2023 - 12 - 20', '2024 - 05 - 25'\n\n\nError Message: 'The Latest Shipment Date (Latest_Shipment_Date) you provided is not in the correct YYYY - MM - DD format, is not within the valid range between the Issue_Date and Expiry_Date, or is blank. Please enter a valid date within the appropriate range.'\n\n\nLC_Description\n\nSingle Column Validation:\n\n\nRule 1: If provided, should be an alphanumeric string with a maximum length of 255 characters.\nRule 1: If provided, should be an alphanumeric string with a maximum length of 255 characters.\n\n\nRule 2: Can be left blank if no detailed description is available.\n\n\nRule 3: Should not contain special characters that may cause system errors (except for allowed punctuation like spaces, commas, etc.).\n\n\nDependency Validation: May be used for reference in document compliance and transaction tracking, so should accurately describe the LC - related goods or services.\nSample Values: 'Purchase of electronic devices', 'Supply of raw materials', ''\n\n\nError Message: 'If you enter a Letter of Credit Description (LC_Description), it should be an alphanumeric string within 255 characters and avoid using prohibited special characters. If there's no description, you can leave this field empty.'\n\n\nDocumentary Compliance\n\n\nDocument_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be a unique alphanumeric string to identify each document.\nRule 1: Must be a unique alphanumeric string to identify each document.\n\n\nRule 2: Length should not exceed 20 characters.\n\n\nRule 3: Cannot be blank as it is the primary key for document records.\n\n\nDependency Validation: Should be associated with a valid LC_ID_Ref to link the document to the correct LC.\n\n\nSample Values: 'DOC0001', 'ABC_DOC12', 'DOC9876'\nSample Values: 'DOC0001', 'ABC_DOC12', 'DOC9876'\n\n\nError Message: 'The Document Identification (Document_ID) you entered is either not unique, exceeds the 20 - character limit, or is blank. Also, make sure it's correctly linked to a valid Letter of Credit. Please correct the entry.'\n\n\nLC_ID_Ref\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string that matches an existing LC_ID in the Core LC Master Data.\nRule 1: Must be an alphanumeric string that matches an existing LC_ID in the Core LC Master Data.\n\n\nRule 2: Cannot be blank as it is used to associate documents with the LC.\n\n\nRule 3: Length should be within 20 characters.\n\n\nDependency Validation: All document - related operations for a specific LC depend on this correct reference.\n\n\nSample Values: 'LC0001', 'USLC1234', 'LC_ABC'\nSample Values: 'LC0001', 'USLC1234', 'LC_ABC'\n\n\nError Message: 'The Letter of Credit Identification Reference (LC_ID_Ref) is incorrect. It should be an alphanumeric string within 20 characters, match an existing LC_ID, and not be blank. Please verify and correct the reference.'\n\n\nDocument_Type\n\nSingle Column Validation:\nDocument_Type\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (Bill of Lading, Commercial Invoice, Packing List, Certificate of Origin, Inspection Certificate, Certificate of Insurance).\n\n\nRule 2: Cannot be left blank as it classifies the document.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: Different document types have different compliance requirements and processing rules.\nSample Values: 'Bill of Lading', 'Commercial Invoice', 'Certificate of Origin'\n\n\nError Message: 'The entered Document Type (Document_Type) is not valid. It must be one of the approved options: Bill of Lading, Commercial Invoice, Packing List, Certificate of Origin, Inspection Certificate, or Certificate of Insurance. Please check and correct the type.'\n\n\nDocument_Status\n\nSingle Column Validation:\nDocument_Status\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (Pending Review, Compliant, Discrepant).\n\n\nRule 2: Cannot be blank as it indicates the current state of the document.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: The status affects payment processing and further actions related to the document and LC.\n\n\nSample Values: 'Pending Review', 'Compliant', 'Discrepant'\nSample Values: 'Pending Review', 'Compliant', 'Discrepant'\n\n\nError Message: 'The Document Status (Document_Status) you entered is incorrect. It should be one of the following: Pending Review, Compliant, or Discrepant. Please make sure the status is accurate and spelled correctly.'\n\n\nSubmission_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Cannot be a future date as documents cannot be submitted in the future.\nRule 2: Cannot be a future date as documents cannot be submitted in the future.\n\n\nRule 3: Cannot be blank as it records when the document was submitted.\n\n\nDependency Validation: Should be after the LC's Issue_Date and before the Expiry_Date.\n\n\nSample Values: '2024 - 02 - 01', '2023 - 11 - 15', '2024 - 03 - 20'\nSample Values: '2024 - 02 - 01', '2023 - 11 - 15', '2024 - 03 - 20'\n\n\nError Message: 'The Document Submission Date (Submission_Date) is invalid. It should be a valid date in the YYYY - MM - DD format, not a future date, and not blank. Also, ensure it's within the valid range of the LC's lifespan. Please correct the date.'\n\n\nReview_Date\n\nSingle Column Validation:\n\n\nRule 1: If provided, must be a valid date in the YYYY - MM - DD format.\nRule 1: If provided, must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Should be after the Submission_Date if both are present.\n\n\nRule 3: Can be left blank if the document has not been reviewed yet.\n\n\nDependency Validation: Linked to the Submission_Date and Document_Status for tracking the review process.\n\n\nSample Values: '2024 - 02 - 05', '2023 - 11 - 20', ''\nSample Values: '2024 - 02 - 05', '2023 - 11 - 20', ''\n\n\nError Message: 'If you enter a Document Review Date (Review_Date), it should be a valid date in the YYYY - MM - DD format and after the Submission_Date. If the document is yet to be reviewed, you can leave this field empty.'\n\n\nDiscrepancy_Details\n\nSingle Column Validation:\n\n\nRule 1: If provided, should be an alphanumeric string with a reasonable length (e.g., up to 255 characters).\nRule 2: Can be left blank if there are no discrepancies.\n\n\nRule 3: Should not contain special characters that may cause system errors (except for allowed punctuation).\n\n\nDependency Validation: Only relevant when the Document_Status is 'Discrepant', and the details should accurately describe the issues.\n\n\nSample Values: 'Incorrect quantity mentioned', 'Missing signature', ''\nSample Values: 'Incorrect quantity mentioned', 'Missing signature', ''\n\n\nError Message: 'If you enter Discrepancy Details (Discrepancy_Details), it should be an alphanumeric string within a reasonable length and avoid using prohibited special characters. If there are no discrepancies, you can leave this field empty.'\n\n\nDocument_Reference_Number\n\nSingle Column Validation:\n\n\nRule 1: If provided, should be an alphanumeric string with a maximum length (e.g., 30 characters).\nRule 2: Can be left blank if no specific reference number is applicable.\n\n\nRule 3: Should not contain special characters that may cause system errors.\n\n\nDependency Validation: May be used for cross - referencing with external parties or systems related to the document.\n\n\nSample Values: 'REF001', 'DOC_REF_ABC', ''\nSample Values: 'REF001', 'DOC_REF_ABC', ''\n\n\nError Message: 'If you enter a Document Reference Number (Document_Reference_Number), it should be an alphanumeric string within the allowed length and avoid using special characters that may cause issues\n\n\n\n\n\n\n21. Transaction_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be a unique alphanumeric string to ensure each transaction event can be distinctly identified.\nRule 2: The length should not exceed 20 characters to fit the data storage and processing design.\n\n\nRule 3: Cannot be blank as it serves as the primary key for transaction event records.\n\n\nDependency Validation: Should be associated with a valid LC_ID_Ref to link the transaction event to the correct Letter of Credit.\n\n\nSample Values: 'TRANS001', 'TXN_123ABC', 'TRA_987XYZ'\nSample Values: 'TRANS001', 'TXN_123ABC', 'TRA_987XYZ'\n\n\nError Message: 'The entered Transaction Identification (Transaction_ID) is either not unique, exceeds the 20 - character limit, or is blank. Also, make sure it's correctly linked to a valid Letter of Credit. Please correct the entry.'\n\n\nLC_ID_Ref\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string that matches an existing LC_ID in the Core LC Master Data table.\nRule 2: Cannot be blank as it's crucial for associating transaction events with the relevant LC.\n\n\nRule 3: The length should be within 20 characters.\n\n\nDependency Validation: All transaction - related operations for a specific LC rely on this correct reference.\n\n\nSample Values: 'LC0002', 'US_LC_12345', 'LCDEF6789'\nSample Values: 'LC0002', 'US_LC_12345', 'LCDEF6789'\n\n\nError Message: 'The Letter of Credit Identification Reference (LC_ID_Ref) is incorrect. It should be an alphanumeric string within 20 characters, match an existing LC_ID, and not be blank. Please verify and correct the reference.'\n\n\nTransaction_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Cannot be a future date as transaction events cannot occur in the future.\nRule 2: Cannot be a future date as transaction events cannot occur in the future.\n\n\nRule 3: Cannot be blank as it records when the transaction event took place.\n\n\nDependency Validation: Should be after the LC's Issue_Date and before or on the Expiry_Date.\n\n\nSample Values: '2024 - 09 - 15', '2023 - 11 - 28', '2024 - 10 - 05'\nSample Values: '2024 - 09 - 15', '2023 - 11 - 28', '2024 - 10 - 05'\n\n\nError Message: 'The Transaction Date (Transaction_Date) you entered is not in the correct YYYY - MM - DD format, is a future date, or is blank. Also, ensure it's within the valid lifespan of the related Letter of Credit. Please correct the date.'\n\n\nTransaction_Type\n\nSingle Column Validation:\nTransaction_Type\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (LC Issued, Documents Presented, Payment Made, Amendment Requested, Amendment Approved, LC Expired).\n\n\nRule 2: Cannot be blank as it defines the nature of the transaction event.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: Different transaction types trigger different subsequent processes and status changes. For example, a 'Payment Made' transaction type may update the Financial Accounting records.\n\n\nSample Values: 'Documents Presented', 'Amendment Requested', 'LC Expired'\nSample Values: 'Documents Presented', 'Amendment Requested', 'LC Expired'\n\n\nError Message: 'The entered Transaction Type (Transaction_Type) is incorrect. It must be one of the valid options: LC Issued, Documents Presented, Payment Made, Amendment Requested, Amendment Approved, LC Expired. Please check and correct the entry.'\n\n\nParty_Involved\n\nSingle Column Validation:\nParty_Involved\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (Applicant, Beneficiary, Issuing Bank, Advising Bank, Negotiating Bank).\n\n\nRule 2: Cannot be blank as it identifies the party performing the transaction event.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: The rights, responsibilities, and actions associated with the transaction event vary depending on the party involved.\nSample Values: 'Beneficiary', 'Issuing Bank', 'Negotiating Bank'\n\n\nError Message: 'The Party Involved (Party_Involved) you entered is incorrect. It must be one of the following options: Applicant, Beneficiary, Issuing Bank, Advising Bank, Negotiating Bank. Please ensure the entry is accurate and spelled correctly.'\n\n\nTransaction_Status\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (In Progress, Completed, Pending).\nRule 1: Must be one of the predefined values in the enum (In Progress, Completed, Pending).\n\n\nRule 2: Cannot be blank as it reflects the current state of the transaction event.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: The transaction status determines what further actions can be taken and how the transaction is reported in various systems.\n\n\nSample Values: 'In Progress', 'Completed', 'Pending'\nSample Values: 'In Progress', 'Completed', 'Pending'\n\n\nError Message: 'The Transaction Status (Transaction_Status) you entered is incorrect. It should be one of the following: In Progress, Completed, Pending. Please confirm the status is accurate and spelled correctly.'\n\n\nPrevious_Transaction_ID\n\nSingle Column Validation:\n\n\nRule 1: If provided, must be an existing valid Transaction_ID to establish a link with the previous related transaction.\nRule 2: Can be left blank if there is no previous transaction for the event.\n\n\nRule 3: If not blank, the length should conform to the Transaction_ID's length requirement, not exceeding 20 characters.\n\n\nDependency Validation: Correctly linking to the previous transaction helps maintain the traceability and integrity of the transaction flow.\n\n\nSample Values: 'TRANS002', '', 'TXN_ABC11'\nSample Values: 'TRANS002', '', 'TXN_ABC11'\n\n\nError Message: 'If you enter a Previous Transaction Identification (Previous_Transaction_ID), it should be an existing valid Transaction_ID and not exceed 20 characters. If there is no previous transaction, you can leave this field blank.'\n\n\nSWIFT Integration\n\n\nSWIFT_Message_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be a unique alphanumeric string to uniquely identify each SWIFT message.\nRule 1: Must be a unique alphanumeric string to uniquely identify each SWIFT message.\n\n\nRule 2: The length should not exceed 20 characters to comply with SWIFT system standards.\n\n\nRule 3: Cannot be blank as it's the key identifier for SWIFT messages.\n\n\nDependency Validation: Should be associated with a valid LC_ID_Ref to link the SWIFT message to the correct Letter of Credit.\n\n\nSample Values: 'SWIFT_MSG001', 'SMSG_123XYZ', 'SW_987ABC'\nSample Values: 'SWIFT_MSG001', 'SMSG_123XYZ', 'SW_987ABC'\n\n\nError Message: 'The entered SWIFT Message Identification (SWIFT_Message_ID) is either not unique, exceeds the 20 - character limit, or is blank. Also, make sure it's correctly linked to a valid Letter of Credit. Please correct the entry.'\n\n\nLC_ID_Ref\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string that matches an existing LC_ID in the Core LC Master Data table.\nRule 2: Cannot be blank as it's essential for associating SWIFT messages with the relevant LC.\n\n\nRule 3: The length should be within 20 characters.\n\n\nDependency Validation: All SWIFT - related operations for a specific LC rely on this correct reference.\n\n\nSample Values: 'LC0003', 'US_LC_56789', 'LCGHI1234'\nSample Values: 'LC0003', 'US_LC_56789', 'LCGHI1234'\n\n\nError Message: 'The Letter of Credit Identification Reference (LC_ID_Ref) is incorrect. It should be an alphanumeric string within 20 characters, match an existing LC_ID, and not be blank. Please verify and correct the reference.'\n\n\nSWIFT_Message_Type\n\nSingle Column Validation:\n\n\nRule 1: Must be one of the predefined values in the enum (MT700, MT701, MT710, MT720, MT730, MT734).\nRule 2: Cannot be blank as it defines the type of SWIFT message.\n\n\nRule 3: Must be spelled correctly as per the defined enum values.\n\n\nDependency Validation: Different SWIFT message types have specific formats and processing requirements, and the message content should align with the type.\n\n\nSample Values: 'MT700', 'MT734', 'MT710'\nSample Values: 'MT700', 'MT734', 'MT710'\n\n\nError Message: 'The entered SWIFT Message Type (SWIFT_Message_Type) is incorrect. It must be one of the valid options: MT700, MT701, MT710, MT720, MT730, MT734. Please check and correct the entry.'\n\n\nSender_SWIFT_Code\n\nSingle Column Validation:\n\n\nRule 1: Must be an 11 - character alphanumeric string, conforming to the standard SWIFT code format.\n\n\nRule 2: Cannot be blank as it identifies the bank sending the SWIFT message.\nRule 2: Cannot be blank as it identifies the bank sending the SWIFT message.\n\n\nRule 3: Must be a valid and existing SWIFT code of a bank, verifiable through official SWIFT channels.\n\n\nDependency Validation: Matches the actual sending bank's information to ensure the message is properly routed and authenticated.\n\n\nSample Values: 'ABCDUS33XXX', 'EFGHEU22YYY', 'IJKJCN11ZZZ'\nSample Values: 'ABCDUS33XXX', 'EFGHEU22YYY', 'IJKJCN11ZZZ'\n\n\nError Message: 'The Sender SWIFT Code (Sender_SWIFT_Code) you entered is invalid. It should be an 11 - character alphanumeric string, not blank, and a valid existing SWIFT code. Please check and enter the correct code.'\n\n\nReceiver_SWIFT_Code\n\nSingle Column Validation:\n\n\nRule 1: Must be an 11 - character alphanumeric string, conforming to the standard SWIFT code format.\nRule 2: Cannot be blank as it identifies the bank receiving the SWIFT message.\n\n\nRule 3: Must be a valid and existing SWIFT code of a bank, verifiable through official SWIFT channels.\n\n\nDependency Validation: Matches the actual receiving bank's information to ensure the message is accurately delivered.\n\n\nSample Values: 'LMNOUS44XXX', 'PQRPEU33YYY', 'STUVCN22ZZZ'\nSample Values: 'LMNOUS44XXX', 'PQRPEU33YYY', 'STUVCN22ZZZ'\n\n\nError Message: 'The Receiver SWIFT Code (Receiver_SWIFT_Code) you entered is invalid. It should be an 11 - character alphanumeric string, not blank, and a valid existing SWIFT code. Please verify and enter the correct code.'\n\n\nMessage_Sent_Date\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid date in the YYYY - MM - DD format.\n\n\nRule 2: Cannot be a future date as SWIFT messages cannot be sent in the future.\nRule 2: Cannot be a future date as SWIFT messages cannot be sent in the future.\n\n\nRule 3: Cannot be blank as it records when the message was dispatched.\n\n\nDependency Validation: Should be within the business operation time frame and earlier than the Message_Received_Date (if received).\n\n\nSample Values: '2024 - 11 - 01', '2023 - 12 - 10', '2024 - 12 - 15'\nSample Values: '2024 - 11 - 01', '2023 - 12 - 10', '2024 - 12 - 15'\n\n\nError Message: 'The Message Sent Date (Message_Sent_Date) you entered is not in the correct YYYY - MM - DD format, is a future date, or is blank. Also, ensure it's within the valid time range. Please correct the date.'\n\n\nMessage_Received_Date\n\nSingle Column Validation:\n\n\nRule 1: If provided, must be a valid date in the YYYY - MM - DD format and later than the Message_Sent_Date.\nRule 2: Can be left blank if the message has not been received yet.\n\n\nRule 3: The date format must be accurate and consistent with system requirements.\n\n\nDependency Validation: Associated with the Message_Sent_Date to reflect the message transmission timeline.\n\n\nSample Values: '2024 - 11 - 02', '', '2023 - 12 - 12'\nSample Values: '2024 - 11 - 02', '', '2023 - 12 - 12'\n\n\nError Message: 'If you enter a Message Received Date (Message_Received_Date), it should be a valid date in the YYYY - MM - DD format and later than the Message Sent Date. If the message hasn't been received, you can leave this field blank.'\n\n\nMessage_Content\n\nSingle Column Validation:\n\n\nRule 1: If provided, the content should comply with the format and syntax rules of SWIFT messages and contain necessary business - relevant information.\nRule 2: Can be left blank in certain initial or exceptional situations where the message content is yet to be determined or not applicable.\n\n\nRule 3: The length of the content should be within the system - acceptable range to avoid storage and transmission issues.\n\n\nDependency Validation: The message content should be consistent with the SWIFT_Message_Type, ensuring proper interpretation and processing.\n\n\nSample Values: 'Request for LC amendment', '', 'Notification of document discrepancies'\nSample Values: 'Request for LC amendment', '', 'Notification of document discrepancies'\n\n\nError Message: 'If you enter Message Content (Message_Content), it should comply with SWIFT message format and syntax rules and have an appropriate length. If there is no content for now, you can leave this field blank.'\n\n\nFinancial Accounting\n\n\nAccounting_Entry_ID\n\nSingle Column Validation:\n\n\nRule 1: Must be a unique alphanumeric string to distinguish each financial accounting entry.\nRule 1: Must be a unique alphanumeric string to distinguish each financial accounting entry.\n\n\nRule 2: The length should not exceed 20 characters to fit the accounting system's data structure.\n\n\nRule 3: Cannot be blank as it's the primary identifier for accounting entries.\n\n\nDependency Validation: Should be associated with a valid LC_ID_Ref to link the accounting entry to the relevant Letter of Credit.\n\n\nSample Values: 'ACCT_ENTRY001', 'AEN_123ABC', 'AC_ENT_987XYZ'\nSample Values: 'ACCT_ENTRY001', 'AEN_123ABC', 'AC_ENT_987XYZ'\n\n\nError Message: 'The entered Accounting Entry Identification (Accounting_Entry_ID) is either not unique, exceeds the 20 - character limit, or is blank. Also, make sure it's correctly linked to a valid Letter of Credit. Please correct the entry.'\n\n\nLC_ID_Ref\n\nSingle Column Validation:\n\n\nRule 1: Must be an alphanumeric string that matches an existing LC_ID in the Core LC Master Data table.\nRule 2: Cannot be blank as it's crucial for associating accounting entries with the relevant LC.\n\n\nRule 3: The length should be within 20 characters.\n\n\nDependency Validation: All accounting operations related to a specific LC rely on this correct reference.\n\n\nSample Values: 'LC0004', 'US_LC_90123', 'LCPQR5678'\nSample Values: 'LC0004', 'US_LC_90123', 'LCPQR5678'\n\n\nError Message: 'The Letter of Credit Identification Reference (LC_ID_Ref) is incorrect. It should be an alphanumeric string within 20 characters, match an existing LC_ID, and not be blank. Please verify and correct the reference.'\n\n\nAccount_Number\n\nSingle Column Validation:\n\n\nRule 1: Must be a valid bank account number, following the bank's specific numbering rules, which may be numeric or alphanumeric.\nRule 2: Cannot be blank as it specifies the account associated with the accounting entry.\n\n\nRule 3: The length should conform to the bank - defined range for account numbers.\n\n\nDependency Validation: Matches the actual bank account information to ensure accurate financial transactions and record - keeping.\n\n\nSample Values: '123456789012345', 'ABC123456789DEF', '567890123456789'\nSample Values: '123456789012345', 'ABC123456789DEF', '567890123456789'\n\n\nError Message: 'The Account Number (Account_Number) you entered is invalid. It should be a valid bank account number, not blank, and within the acceptable length range. Please check and enter the correct account number.'\n\n\nDebit_Amount\n\nSingle Column Validation:\nDebit_Amount\n\nSingle Column Validation:\n\nRule 1: Must be a non - negative decimal number, as debit amounts in financial accounting represent asset increases or liability/debit decreases and cannot be negative (except for specific adjustment scenarios).\n\n\nRule 2: The total number of digits should not exceed 15, with a maximum of 2 digits after the decimal point.\nRule 3: In a balanced accounting entry, the sum of debit amounts should equal the sum of credit amounts when all relevant entries are considered.\n\n\nDependency Validation: Related to Credit_Amount and other financial fields to maintain the integrity of the accounting equation (Assets = Liabilities + Equity).\n\n\nSample Values: '1500.00', '3750.50', '12000.00'\nSample Values: '1500.00', '3750.50', '12000.00'\n\n\nError Message: 'The Debit Amount (Debit_Amount) is invalid. It should be a non - negative decimal number, with no more than 15 total digits\n    "
}